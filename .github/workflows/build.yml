# Check there for the free amount we have https://help.github.com/en/github/setting-up-and-managing-billing-and-payments-on-github/about-billing-for-github-actions
# Check there for doc https://help.github.com/en/actions/automating-your-workflow-with-github-actions/workflow-syntax-for-github-actions#on

name: Build

on:
  push:
    branches:
      - '*'
env:
  COMMON_ENV_DEBUG: '1'
  # COMMON_ENV_FULL_DEBUG: '1'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        python-version: [3.8]
    steps:
      # Check OS
      - name: Check OS
        run: |
          uname -a
          echo "  * uname -m: $(uname -m)"
          echo "  * uname -n: $(uname -n)"
          echo "  * uname -p: $(uname -p)"
          echo "  * uname -r: $(uname -r)"
          echo "  * uname -s: $(uname -s)"
          echo "  * uname -v: $(uname -v)"
          echo "  * Check git version: $(git --version)"
          echo "  * Check shell: $SHELL"
          echo "  * Check bash: $(which bash)"
          bash -c 'echo hello from $SHELL'
          echo "  * Check env:"
          env | sort
      # Checkout repo
      - uses: actions/checkout@v2
        with:
          fetch-depth: 5
          submodules: false
      # Configure python version
      - name: Use Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      # Upgrade bash on Mac
      - name: Upgrade bash on Mac
        if: runner.os == 'macOs'
        run: brew install bash
      # Check system on Linux and Mac
      - name: Check system on Linux and Mac
        if: runner.os == 'Linux' || runner.os == 'macOs'
        run: |
          source tools/shell/source/system.sh
          echo "  * Current system: $(system_get_os)"
          echo "  * Current host system: $(system_get_os_host)"
          echo "  * Current shell path: $(system_get_current_shell_path)"
          echo "  * Current shell: $(system_get_current_shell)"
          echo "  * Installed shells:"
          system_get_shells
          echo "  * Current shell info:"
          system_display_shell_info
      # Check system with bash
      - name: Check system with bash
        shell: bash
        run: |
          source tools/shell/source/system.sh
          echo "  * Current system: $(system_get_os)"
          echo "  * Current host system: $(system_get_os_host)"
          echo "  * Current shell path: $(system_get_current_shell_path)"
          echo "  * Current shell: $(system_get_current_shell)"
          echo "  * Installed shells:"
          system_get_shells
          echo "  * Current shell info:"
          system_display_shell_info
      # Display ~/.bashrc and remove
      - name: Display ~/.bashrc and remove
        shell: bash
        run: |
          if [ -f "$HOME/.bashrc" ]; then
            cat "$HOME/.bashrc" | nl -ba
            rm -f "$HOME/.bashrc"
          else
            echo "'$HOME/.bashrc' does not exist"
          fi
      # Display .git/config
      - name: Display .git/config
        run: cat ".git/config" | nl -ba
      # Setup Mac
      - name: Setup Mac
        if: runner.os == 'macOS'
        run: |
          echo "  * First setup:"
          bash ./tools/mac/setup_mac.sh -s
          echo ""
          echo "  * Try to setup again:"
          bash ./tools/mac/setup_mac.sh -s
      # Check setup with space character in paths
      - name: Check setup with space character in paths
        shell: bash
        run: |
          echo "  * Setup"
          tmpdir=$(mktemp -d)

          dir_with_space="$tmpdir/path with space"
          mkdir -p "$dir_with_space"
          git clone . "$dir_with_space/common_env"

          export HOME="$tmpdir/bad home"
          mkdir -p "$HOME"

          bash "$dir_with_space/common_env/scripts/setup.sh" -s

          echo "  * Source .bashrc"
          source "$HOME/.bashrc"

          echo "  * Check path"
          pathList
          echo "  * Check current python"
          pyinfo
          echo "  * Create python venv"
          pythonvenv list
          pycreate
          echo "  * List env"
          pylist
          echo "  * Check git"
          git st
      # Setup on bash
      - name: Setup on bash
        shell: bash
        run: |
          echo "Setup everything"
          bash ./scripts/setup.sh -s
          git config color.ui always
      # Display ~/.bash_profile
      - name: Display ~/.bash_profile
        run: cat "$HOME/.bash_profile" | nl -ba
      # Display ~/.bashrc
      - name: Display ~/.bashrc
        run: cat "$HOME/.bashrc" | nl -ba
      # Display ~/.zshrc
      - name: Display ~/.zshrc
        run: cat "$HOME/.zshrc" | nl -ba
      # Display ~/.gitconfig
      - name: Display ~/.gitconfig
        run: cat "$HOME/.gitconfig" | nl -ba

      # Check shell
      - name: Check shell
        shell: bash
        run: |
          source "$HOME/.bashrc"
          echo "  * Current shell: $(system_get_current_shell)"
          echo "  * Installed shells:"
          system_get_shells
          echo "  * Current shell info:"
          system_display_shell_info
          echo "  * Display PATH with pathList"
          pathList
          echo "  * Check $HOME/bin"
          ls -al ~/bin/
      # Check python
      - name: Check python
        shell: bash
        run: |
          source "$HOME/.bashrc"
          echo "  * Check current python"
          pyinfo
          echo "  * Create python venv"
          pythonvenv list
          pycreate
          echo "  * List env"
          pylist
          echo "  * Set env"
          echo "$(pythonvenv set $(pylist | head -1))"
          pyset $(pylist | head -1)
          echo "  * Check current python"
          type python
          python -c "import sys; print(f'Python version: {sys.version}\\nPython path:\\n{sys.path}')"
      # Quick git check
      # Runs on the system default shell
      - name: Quick git check
        run: |
          git st
          git lga20
      # Check Git
      - name: Check Git
        shell: bash
        run: |
          git config --global user.name runner
          bash ./tools/git/test_git.sh
      # Check update
      - name: Check update
        shell: bash
        env:
          COMMON_ENV_FORCE_CHECK: 1
        run: |
          source "$HOME/.bashrc"

      # Install zsh on Linux
      - name: Install zsh on Linux
        if: runner.os == 'Linux'
        shell: bash
        run: sudo apt-get install zsh
      # Install zsh on Mac
      - name: Install zsh on Mac
        if: runner.os == 'macOs'
        shell: bash
        run: brew install zsh
      # Check zsh shell
      - name: Check zsh shell
        if: runner.os == 'Linux' || runner.os == 'macOs'
        shell: zsh -e -o pipefail {0}
        env:
          SHELL: zsh
        run: |
          source "$HOME/.zshrc"
          echo "  * Current shell: $(system_get_current_shell)"
          echo "  * Installed shells:"
          system_get_shells
          echo "  * Current shell info:"
          system_display_shell_info
          echo "  * Display PATH with pathList"
          pathList
          echo "  * Check $HOME/bin"
          ls -al ~/bin/
          echo "  * List python venv"
          pylist
      # Quick git check on zsh
      - name: Quick git check on zsh
        if: runner.os == 'Linux' || runner.os == 'macOs'
        shell: zsh -e -o pipefail {0}
        run: |
          git st
          git lga20
